{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSatisfy"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the sequence contains only elements that satisfy"},{"type":"text","text":" "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":"; otherwise, "},{"type":"codeVoice","code":"false"},{"type":"text","text":"."}]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence"},{"type":"text","text":" "},{"type":"text","text":"as its argument and returns a Boolean value that indicates whether"},{"type":"text","text":" "},{"type":"text","text":"the passed element satisfies a condition."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following code uses this method to test whether all the names in an"},{"type":"text","text":" "},{"type":"text","text":"array have at least five characters:"}]},{"type":"codeListing","syntax":null,"code":["let names = [\"Sofia\", \"Camilla\", \"Martina\", \"Mateo\", \"NicolÃ¡s\"]","let allHaveAtLeastFive = names.allSatisfy({ $0.count >= 5 })","\/\/ allHaveAtLeastFive == true"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the sequence is empty, this method returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/lotsawa\/forest\/derivationset\/allsatisfy(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet\/allSatisfy(_:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether every element of a sequence"},{"type":"text","text":" "},{"type":"text","text":"satisfies a given predicate."}],"kind":"symbol","metadata":{"role":"symbol","title":"allSatisfy(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSatisfy"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"symbolKind":"method","externalID":"s:STsE10allSatisfyyS2b7ElementQzKXEKF::SYNTHESIZED::s:7Lotsawa6ForestV13DerivationSetV","extendedModule":"Swift","modules":[{"name":"Lotsawa"}]},"hierarchy":{"paths":[["doc:\/\/Lotsawa\/documentation\/Lotsawa","doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest","doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet","doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet\/Sequence-Implementations"]]},"references":{"doc://Lotsawa/documentation/Lotsawa":{"role":"collection","title":"Lotsawa","abstract":[],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa","kind":"symbol","type":"topic","url":"\/documentation\/lotsawa"},"doc://Lotsawa/documentation/Lotsawa/Forest/DerivationSet/allSatisfy(_:)":{"role":"symbol","title":"allSatisfy(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"allSatisfy"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether every element of a sequence"},{"type":"text","text":" "},{"type":"text","text":"satisfies a given predicate."}],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet\/allSatisfy(_:)","kind":"symbol","type":"topic","url":"\/documentation\/lotsawa\/forest\/derivationset\/allsatisfy(_:)"},"doc://Lotsawa/documentation/Lotsawa/Forest":{"role":"symbol","title":"Forest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Forest"}],"abstract":[{"type":"text","text":"A result of recognition from which parses can be extracted."}],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Forest"}],"url":"\/documentation\/lotsawa\/forest"},"doc://Lotsawa/documentation/Lotsawa/Forest/DerivationSet/Sequence-Implementations":{"role":"collectionGroup","title":"Sequence Implementations","abstract":[],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet\/Sequence-Implementations","kind":"article","type":"topic","url":"\/documentation\/lotsawa\/forest\/derivationset\/sequence-implementations"},"doc://Lotsawa/documentation/Lotsawa/Forest/DerivationSet":{"conformance":{"constraints":[{"type":"codeVoice","code":"StoredSymbol"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SignedInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Forest.DerivationSet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DerivationSet"}],"abstract":[{"type":"text","text":"A subset of the parses of a single symbol over a range of source positions."}],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DerivationSet"}],"url":"\/documentation\/lotsawa\/forest\/derivationset"}}}