{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":" "},{"kind":"internalParam","text":"end"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A subsequence up to, but not including, the "},{"type":"codeVoice","code":"end"},{"type":"text","text":" position."}]}]},{"kind":"parameters","parameters":[{"name":"end","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The “past the end” index of the resulting subsequence."},{"type":"text","text":" "},{"type":"codeVoice","code":"end"},{"type":"text","text":" must be a valid index of the collection."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The resulting subsequence "},{"type":"emphasis","inlineContent":[{"type":"text","text":"does not include"}]},{"type":"text","text":" the element at the position"},{"type":"text","text":" "},{"type":"codeVoice","code":"end"},{"type":"text","text":". The following example searches for the index of the number "},{"type":"codeVoice","code":"40"},{"type":"text","text":" "},{"type":"text","text":"in an array of integers, and then prints the prefix of the array up to,"},{"type":"text","text":" "},{"type":"text","text":"but not including, that index:"}]},{"type":"codeListing","syntax":null,"code":["let numbers = [10, 20, 30, 40, 50, 60]","if let i = numbers.firstIndex(of: 40) {","    print(numbers.prefix(upTo: i))","}","\/\/ Prints \"[10, 20, 30]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Passing the collection’s starting index as the "},{"type":"codeVoice","code":"end"},{"type":"text","text":" parameter results in"},{"type":"text","text":" "},{"type":"text","text":"an empty subsequence."}]},{"type":"codeListing","syntax":null,"code":["print(numbers.prefix(upTo: numbers.startIndex))","\/\/ Prints \"[]\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Using the "},{"type":"codeVoice","code":"prefix(upTo:)"},{"type":"text","text":" method is equivalent to using a partial"},{"type":"text","text":" "},{"type":"text","text":"half-open range as the collection’s subscript. The subscript notation is"},{"type":"text","text":" "},{"type":"text","text":"preferred over "},{"type":"codeVoice","code":"prefix(upTo:)"},{"type":"text","text":"."}]},{"type":"codeListing","syntax":null,"code":["if let i = numbers.firstIndex(of: 40) {","    print(numbers[..<i])","}","\/\/ Prints \"[10, 20, 30]\""]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1)"}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/lotsawa\/forest\/derivationset\/prefix(upto:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet\/prefix(upTo:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"type":"text","text":" "},{"type":"text","text":"including, the specified position."}],"kind":"symbol","metadata":{"role":"symbol","title":"prefix(upTo:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"symbolKind":"method","externalID":"s:SlsE6prefix4upTo11SubSequenceQz5IndexQz_tF::SYNTHESIZED::s:7Lotsawa6ForestV13DerivationSetV","extendedModule":"Swift","modules":[{"name":"Lotsawa"}]},"hierarchy":{"paths":[["doc:\/\/Lotsawa\/documentation\/Lotsawa","doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest","doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet","doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet\/Collection-Implementations"]]},"references":{"doc://Lotsawa/documentation/Lotsawa/Forest/DerivationSet/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","abstract":[],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet\/Collection-Implementations","kind":"article","type":"topic","url":"\/documentation\/lotsawa\/forest\/derivationset\/collection-implementations"},"doc://Lotsawa/documentation/Lotsawa/Forest/DerivationSet/prefix(upTo:)":{"role":"symbol","title":"prefix(upTo:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"prefix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upTo"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Index"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"abstract":[{"type":"text","text":"Returns a subsequence from the start of the collection up to, but not"},{"type":"text","text":" "},{"type":"text","text":"including, the specified position."}],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet\/prefix(upTo:)","kind":"symbol","type":"topic","url":"\/documentation\/lotsawa\/forest\/derivationset\/prefix(upto:)"},"doc://Lotsawa/documentation/Lotsawa/Forest":{"role":"symbol","title":"Forest","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Forest"}],"abstract":[{"type":"text","text":"A result of recognition from which parses can be extracted."}],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Forest"}],"url":"\/documentation\/lotsawa\/forest"},"doc://Lotsawa/documentation/Lotsawa":{"role":"collection","title":"Lotsawa","abstract":[],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa","kind":"symbol","type":"topic","url":"\/documentation\/lotsawa"},"doc://Lotsawa/documentation/Lotsawa/Forest/DerivationSet":{"conformance":{"constraints":[{"type":"codeVoice","code":"StoredSymbol"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":" and "},{"type":"codeVoice","code":"SignedInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"Forest.DerivationSet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DerivationSet"}],"abstract":[{"type":"text","text":"A subset of the parses of a single symbol over a range of source positions."}],"identifier":"doc:\/\/Lotsawa\/documentation\/Lotsawa\/Forest\/DerivationSet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DerivationSet"}],"url":"\/documentation\/lotsawa\/forest\/derivationset"}}}